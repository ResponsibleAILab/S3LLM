Please Generate FQL to Check Whether one-sided communication is used or not => FQL => “CHECK (MPI_Put || MPI_RPut || MPI_Get || MPI_RGet) WHERE (*) “

Generate FQL to Check process, topology used in the Code=> FQL => “ LIST (CHECK (MPI_CART_Create) WHERE(*) AS (Cartesian), CHECK (MPI_GRAPH_Create) WHERE(*) AS (Graph), CHECK (MPI_DIST_GRAPH_CREATE_Adjacent || MPI_DIST_GRAPH_Create) WHERE(*) AS (Distributed Graph)) “

Generate FQL to Check Whether OpenMP, scheduling, method is used in the Code or not => FQL => “LIST (CHECK (schedule(static) WHERE(*) AS (Static), CHECK (schedule(dynamic) WHERE(*) AS (Dynamic), CHECK (schedule(guided)  WHERE(*) AS (Guided), CHECK (schedule(auto) WHERE(*) AS (Auto), CHECK (schedule(runtime) WHERE(*) AS (Runtime)) “

Generate FQL to Check Does it use OpenMP Task programing constructs => FQL => “CHECK (omp task || end task ||  omp taskloop || omp taskloop simd || omp taskyield) WHERE (*)”

Please Generate FQL to Check Is CUDA programming used in the Code => FQL => “CHECK (__device__ ||  __global__ ||  __host__ ||  __noinline__  || __forceinline__) WHERE (*) AS (CUDA)”

Generate FQL to Check it support multiple GPUs => FQL => “CHECK (cudaSetDevice || cudaGetDeviceCount || cudaGetDevice) WHERE (*) AS (MultipleGPU)”

Generate FQL to Check it use hybrid MPI/OpenMP programming used in the code=> FQL => “AND (CHECK (mpi.h || use mpi || mpif.h) WHERE (*) AS (MPI), CHECK (#pragma omp) WHERE (*) AS (OpenMP)) “

Please Generate FQL to Check Is MPI-IO used to do parallel IO => FQL => “CHECK (MPI_FILE_OPEN || MPI_FILE_DELETE || MPI_FILE_SET_SIZE || MPI_FILE_PREALLOCATE || MPI_FILE_GET_SIZE || MPI_FILE_GET_GROUP || MPI_FILE_GET_AMODE || MPI_FILE_SET_INFO || MPI_FILE_GET_INFO || MPI_FILE_SET_VIEW || MPI_FILE_GET_VIEW) WHERE(*) AS (MPIIO)”

Generate FQL to Check the CUDA programs in the project computing double precision, single precision, or both => FQL =>” LIST (CHECK (double) WHERE (.cu,.cuh) AS (double), CHECK (float) WHERE (.cu,.cuh) AS (single))”

Please Generate FQL to Check ANSI C standard is used by the software => FQL => “MAX (CHECK (stdnoreturn.h || stdalign.h) WHERE (*) AS (110), CHECK (stdbool.h || stdint.h) WHERE (*) AS (099), CHECK (float.h || limits.h || stdarg.h || stddef.h) WHERE (*) AS (089))”

FQL query to Check Fortran standard is used by the software => FQL => “ MAX (CHECK (CODIMENSION) WHERE (.f,.f77,.f90,.f95,.f03) AS (108), CHECK (class || select type) WHERE (.f,.f77,.f90,.f95,.f03) AS (103), CHECK (FORALL || INDEPENDENT) WHERE (.f,.f77,.f90,.f95,.f03) AS (095), CHECK (end module) WHERE (.f,.f77,.f90,.f95,.f03) AS (090), CHECK (implicit none || end program) WHERE (.f,.f77,.f90,.f95,.f03) AS (077)) ”

can you create FQL query to Check SSE or AVX functions used by the software => FQL => “CHECK (immintrin.h) WHERE (*) AS (SSEorAVX)”


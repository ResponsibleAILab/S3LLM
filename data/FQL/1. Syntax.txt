Is one-sided communication used?
FQL: CHECK (MPI_Put || MPI_RPut || MPI_Get || MPI_RGet) WHERE (*)

What kind of process topology are used?
FQL: LIST (CHECK (MPI_CART_Create) WHERE(*) AS (Cartesian), CHECK (MPI_GRAPH_Create) WHERE(*) AS (Graph), CHECK (MPI_DIST_GRAPH_CREATE_Adjacent || MPI_DIST_GRAPH_Create) WHERE(*) AS (Distributed Graph))

Is OpenMP used? 
FQL: CHECK (!$OMP || pragma omp) WHERE (*) AS (OpenMP)

What OpenMP scheduling method is used? 
FQL: LIST (CHECK (schedule(static) WHERE(*) AS (Static), CHECK (schedule(dynamic) WHERE(*) AS (Dynamic), CHECK (schedule(guided)  WHERE(*) AS (Guided), CHECK (schedule(auto) WHERE(*) AS (Auto), CHECK (schedule(runtime) WHERE(*) AS (Runtime))

Does it use OpenMP Task programing constructs?
FQL: CHECK (omp task || end task ||  omp taskloop || omp taskloop simd || omp taskyield) WHERE (*)

Is CUDA programming used?
FQL: CHECK (__device__ ||  __global__ ||  __host__ ||  __noinline__  || __forceinline__) WHERE (*) AS (CUDA)
 
Does it support multiple GPUs?
FQL: CHECK (cudaSetDevice || cudaGetDeviceCount || cudaGetDevice) WHERE (*) AS (MultipleGPU)

Is OpenACC used?
FQL: CHECK (!$acc || #pragma acc) WHERE (*) AS (OpenACC)

Does it use hybrid MPI/OpenMP programming?
FQL: AND (CHECK (mpi.h || use mpi || mpif.h) WHERE (*) AS (MPI), CHECK (#pragma omp) WHERE (*) AS (OpenMP))

Are the CUDA programs in the project computing double precision, single precision, or both?
FQL: LIST (CHECK (double) WHERE (.cu,.cuh) AS (double), CHECK (float) WHERE (.cu,.cuh) AS (single))

Which Fortran standard is used by the software?
FQL: MAX (CHECK (CODIMENSION) WHERE (.f,.f77,.f90,.f95,.f03) AS (108), CHECK (class || select type) WHERE (.f,.f77,.f90,.f95,.f03) AS (103), CHECK (FORALL || INDEPENDENT) WHERE (.f,.f77,.f90,.f95,.f03) AS (095), CHECK (end module) WHERE (.f,.f77,.f90,.f95,.f03) AS (090), CHECK (implicit none || end program) WHERE (.f,.f77,.f90,.f95,.f03) AS (077))

Are any SSE or AVX functions used by the software?
FQL: CHECK (immintrin.h) WHERE (*) AS (SSEorAVX)

